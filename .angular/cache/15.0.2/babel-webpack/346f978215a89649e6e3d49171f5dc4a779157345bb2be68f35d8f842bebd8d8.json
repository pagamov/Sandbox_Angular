{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../local.service\";\nimport * as i2 from \"@angular/router\";\nexport class SignComponent {\n  constructor(localStore, route, router) {\n    this.localStore = localStore;\n    this.route = route;\n    this.router = router;\n    this.login = '';\n    this.password = '';\n    this.loginError = false;\n    this.passwordError = false;\n  }\n  createNewUser() {\n    if (this.localStore.getData(this.login) == null) {\n      // can create a new user;\n      if (this.login != '' && this.password != '') {\n        // add login and pswd to local storage\n        this.localStore.saveData(this.login, this.password);\n        this.router.navigate(['/home'], {\n          queryParams: {\n            UserLogin: this.login\n          }\n        });\n      } else {\n        // based on state change required state of login and password\n        this.loginError = true ? this.login == '' : false;\n        this.passwordError = true ? this.password == '' : false;\n      }\n    } else {\n      // user already in store so alert\n      alert('Login already used');\n    }\n  }\n  static #_ = this.ɵfac = function SignComponent_Factory(t) {\n    return new (t || SignComponent)(i0.ɵɵdirectiveInject(i1.LocalService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignComponent,\n    selectors: [[\"app-sign\"]],\n    decls: 0,\n    vars: 0,\n    template: function SignComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,aAAa;EAExBC,YAAqBC,UAAwB,EAAUC,KAAsB,EAAUC,MAAe;IAAjF,eAAU,GAAVF,UAAU;IAAwB,UAAK,GAALC,KAAK;IAA2B,WAAM,GAANC,MAAM;IAE7F,UAAK,GAAY,EAAE;IACnB,aAAQ,GAAY,EAAE;IAEtB,eAAU,GAAa,KAAK;IAC5B,kBAAa,GAAa,KAAK;EAN0E;EAQzGC,aAAa;IACX,IAAI,IAAI,CAACH,UAAU,CAACI,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,IAAI,IAAI,EAAE;MAC/C;MACA,IAAI,IAAI,CAACA,KAAK,IAAI,EAAE,IAAI,IAAI,CAACC,QAAQ,IAAI,EAAE,EAAE;QAC3C;QACA,IAAI,CAACN,UAAU,CAACO,QAAQ,CAAC,IAAI,CAACF,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;QACnD,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;UAAEC,WAAW,EAAE;YAAEC,SAAS,EAAE,IAAI,CAACL;UAAK;QAAE,CAAE,CAAC;OAC5E,MAAM;QACL;QACA,IAAI,CAACM,UAAU,GAAG,IAAI,GAAG,IAAI,CAACN,KAAK,IAAI,EAAE,GAAG,KAAK;QACjD,IAAI,CAACO,aAAa,GAAG,IAAI,GAAG,IAAI,CAACN,QAAQ,IAAI,EAAE,GAAG,KAAK;;KAE1D,MAAM;MACL;MACAO,KAAK,CAAC,oBAAoB,CAAC;;EAE/B;EAAC;qBA1BUf,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;EAAA","names":["SignComponent","constructor","localStore","route","router","createNewUser","getData","login","password","saveData","navigate","queryParams","UserLogin","loginError","passwordError","alert","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["/Users/pavelgamov/Desktop/Sandbox_Angular/src/app/sign/sign.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { LocalService } from '../local.service';\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\n\nexport class SignComponent {\n\n  constructor (private localStore: LocalService, private route : ActivatedRoute, private router : Router) {}\n\n  login : string = '';\n  password : string = '';\n\n  loginError : boolean = false;\n  passwordError : boolean = false;\n\n  createNewUser () : void {\n    if (this.localStore.getData(this.login) == null) {\n      // can create a new user;\n      if (this.login != '' && this.password != '') {\n        // add login and pswd to local storage\n        this.localStore.saveData(this.login, this.password);\n        this.router.navigate(['/home'], { queryParams: { UserLogin: this.login } });\n      } else {\n        // based on state change required state of login and password\n        this.loginError = true ? this.login == '' : false;\n        this.passwordError = true ? this.password == '' : false;\n      }\n    } else {\n      // user already in store so alert\n      alert('Login already used');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}