{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../local.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(localStore, route, router) {\n    this.localStore = localStore;\n    this.route = route;\n    this.router = router;\n    this.text = {\n      username: 'Username',\n      name_req: 'Name is required.',\n      pass: 'Password',\n      pass_req: 'Password is required.',\n      log_in: 'Log in'\n    };\n    this.login = '';\n    this.password = '';\n    this.loginError = false;\n    this.passwordError = false;\n  }\n  logIn() {\n    if (this.localStore.getData(this.login) == this.password) {\n      // local store contains login and psw\n      this.router.navigate(['/home'], {\n        queryParams: {\n          UserLogin: this.login\n        }\n      });\n    } else if (this.localStore.getData(this.login) == null) {\n      if (this.login == '' || this.password == '') {\n        this.loginError = true ? this.login == '' : false;\n        this.passwordError = true ? this.password == '' : false;\n      } else {\n        alert('No user with this login');\n      }\n    } else {\n      // password incorect\n      alert('Incorect password');\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LocalService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 6,\n    consts: [[1, \"font\"], [1, \"div_m\"], [\"id\", \"loginValue\", \"name\", \"loginValue\", \"type\", \"text\", \"required\", \"\", \"ng-model\", \"loginValue\", 1, \"inp\", 3, \"value\"], [\"id\", \"passwordValue\", \"name\", \"passwordValue\", \"type\", \"password\", \"required\", \"\", \"ng-model\", \"passwordValue\", 1, \"inp\", 3, \"value\"], [1, \"b_m\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelement(3, \"br\")(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵtext(6);\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n          return ctx.logIn();\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.text.username, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.login);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.text.pass, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.passwordValue.$valid, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.text.log_in);\n      }\n    },\n    styles: [\".font[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n}\\n\\n.div_m[_ngcontent-%COMP%] {\\n    width: 20%; margin-left: 40%; margin-top: 10px;\\n}\\n\\n.b_m[_ngcontent-%COMP%] {\\n    margin-left: 38%;\\n}\\n\\n.inp[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n/*# sourceURL=webpack://./src/app/login/login.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsZ0JBQWdCO0FBQ2xEOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLmZvbnQge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmRpdl9tIHtcbiAgICB3aWR0aDogMjAlOyBtYXJnaW4tbGVmdDogNDAlOyBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uYl9tIHtcbiAgICBtYXJnaW4tbGVmdDogMzglO1xufVxuXG4uaW5wIHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,cAAc;EACzBC,YAAqBC,UAAwB,EAAUC,KAAsB,EAAUC,MAAe;IAAjF,eAAU,GAAVF,UAAU;IAAwB,UAAK,GAALC,KAAK;IAA2B,WAAM,GAANC,MAAM;IAE7F,SAAI,GAAG;MACLC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,mBAAmB;MAC7BC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,uBAAuB;MACjCC,MAAM,EAAE;KACT;IAED,UAAK,GAAY,EAAE;IACnB,aAAQ,GAAY,EAAE;IAEtB,eAAU,GAAa,KAAK;IAC5B,kBAAa,GAAa,KAAK;EAd0E;EAgBzGC,KAAK;IACH,IAAI,IAAI,CAACR,UAAU,CAACS,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,IAAI,IAAI,CAACC,QAAQ,EAAE;MACxD;MACA,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;QAAEC,WAAW,EAAE;UAAEC,SAAS,EAAE,IAAI,CAACJ;QAAK;MAAE,CAAE,CAAC;KAC5E,MAAM,IAAI,IAAI,CAACV,UAAU,CAACS,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,IAAI,IAAI,EAAE;MACtD,IAAI,IAAI,CAACA,KAAK,IAAI,EAAE,IAAI,IAAI,CAACC,QAAQ,IAAI,EAAE,EAAE;QAC3C,IAAI,CAACI,UAAU,GAAG,IAAI,GAAG,IAAI,CAACL,KAAK,IAAI,EAAE,GAAG,KAAK;QACjD,IAAI,CAACM,aAAa,GAAG,IAAI,GAAG,IAAI,CAACL,QAAQ,IAAI,EAAE,GAAG,KAAK;OACxD,MAAM;QACLM,KAAK,CAAC,yBAAyB,CAAC;;KAEnC,MAAM;MACL;MACAA,KAAK,CAAC,mBAAmB,CAAC;;EAE9B;EAAC;qBAhCUnB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT3BC,8BAAkB;QAEVA,YACA;QAGAA,qBAAI;QAQRA,iBAAM;QACNA,8BAAmB;QACfA,YACA;QAGAA,qBAAI;QACJA,YACA;QAAAA,2BAMiC;QACrCA,iBAAM;QACNA,+BAAmB;QACPA;UAAA,OAASC,WAAO;QAAA,EAAC;QAAaD,aAAe;QAAAA,iBAAS;;;QA7B9DA,eACA;QADAA,kDACA;QASQA,eAAe;QAAfA,iCAAe;QAIvBA,eACA;QADAA,8CACA;QAIAA,eACA;QADAA,yDACA;QAKQA,eAAkB;QAAlBA,oCAAkB;QAIYA,eAAe;QAAfA,qCAAe","names":["LoginComponent","constructor","localStore","route","router","username","name_req","pass","pass_req","log_in","logIn","getData","login","password","navigate","queryParams","UserLogin","loginError","passwordError","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/pavelgamov/Desktop/Sandbox_Angular/src/app/login/login.component.ts","/Users/pavelgamov/Desktop/Sandbox_Angular/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalService } from '../local.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor (private localStore: LocalService, private route : ActivatedRoute, private router : Router) {}\n\n  text = {\n    username: 'Username',\n    name_req: 'Name is required.',\n    pass: 'Password',\n    pass_req: 'Password is required.',\n    log_in: 'Log in'\n  };\n\n  login : string = '';\n  password : string = '';\n\n  loginError : boolean = false;\n  passwordError : boolean = false;\n\n  logIn() : void {\n    if (this.localStore.getData(this.login) == this.password) {\n      // local store contains login and psw\n      this.router.navigate(['/home'], { queryParams: { UserLogin: this.login } });\n    } else if (this.localStore.getData(this.login) == null) {\n      if (this.login == '' || this.password == '') {\n        this.loginError = true ? this.login == '' : false;\n        this.passwordError = true ? this.password == '' : false;\n      } else {\n        alert('No user with this login');\n      }\n    } else {\n      // password incorect\n      alert('Incorect password');\n    }\n  }\n}\n","<div class=\"font\">\n    <div class=\"div_m\">\n        {{text.username}}\n        <!-- <div *ngIf=\"loginValue.errors?.['required'] && this.loginError\">\n            {{text.name_req}}\n        </div>  -->\n        <br>\n        <input  class=\"inp\" \n                id=\"loginValue\"\n                name=\"loginValue\"\n                type=\"text\" \n                required \n                [value]=\"login\" \n                ng-model=\"loginValue\">\n    </div>\n    <div class=\"div_m\">\n        {{text.pass}}\n        <!-- <div *ngIf=\"passwordValue.errors?.['required'] && this.passwordError\">\n            {{text.pass_req}}\n        </div>  -->\n        <br>\n        {{passwordValue.$valid}}\n        <input  class=\"inp\" \n                id=\"passwordValue\" \n                name=\"passwordValue\" \n                type=\"password\" \n                required \n                [value]=\"password\" \n                ng-model=\"passwordValue\">\n    </div>\n    <div class=\"div_m\">\n        <button (click)=\"logIn()\" class=\"b_m\">{{text.log_in}}</button>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}