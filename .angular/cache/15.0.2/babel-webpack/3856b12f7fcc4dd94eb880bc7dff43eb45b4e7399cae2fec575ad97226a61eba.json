{"ast":null,"code":"var A;\n(function (A) {\n  A[A[\"a\"] = 0] = \"a\";\n  A[A[\"b\"] = 1] = \"b\";\n})(A || (A = {}));\nexport class HomeComponent {\n  constructor(localStore, route, router) {\n    this.localStore = localStore;\n    this.route = route;\n    this.router = router;\n    this.text = {\n      needlogin: 'You need to be logged in!',\n      cwith: 'Create with',\n      modal: 'modal form',\n      reactive: 'reactive form',\n      task: 'Task',\n      priority: 'Priority',\n      time: 'Time',\n      edit: 'Editing with',\n      delete: 'Deleting',\n      del: 'delete'\n    };\n    this.login = '';\n    this.logged = true; // then change to false and repair token \n    // enum Arrows {up, down};\n    this.arrors = {\n      up: '↑',\n      down: '↓',\n      def: '○'\n    };\n    this.sorted = ['○', '○', '○'];\n    this.tasks = [{\n      description: 'Погулять с собакой',\n      priority: 'Важно но лень',\n      time: '06:00'\n    }, {\n      description: 'Дописать функционал',\n      priority: 'Важно',\n      time: '12:15'\n    }, {\n      description: 'Выпить воды',\n      priority: 'Не важно',\n      time: '21:00'\n    }, {\n      description: 'Выучить как отцентровать div',\n      priority: 'Важно',\n      time: '00:00'\n    }];\n    this.options = ['Важно', 'Важно но лень', 'Не важно'];\n  }\n  ngOnInit() {\n    // taking params from URL query; mosty from log and sign pages via RouterChange\n    this.route.queryParamMap.subscribe(params => {\n      this.login = params.get('UserLogin') || '';\n      if (this.login != '') {\n        this.logged = true;\n      }\n    });\n  }\n  sortTasks(item) {\n    if (item === 'Task') {\n      this.sorted[1] = '○';\n      this.sorted[2] = '○';\n      function cmp(a, b) {\n        return a.description < b.description ? -1 : a.description > b.description ? 1 : 0;\n      }\n      switch (this.sorted[0]) {\n        case '○':\n          this.tasks.sort(cmp);\n          this.sorted[0] = '↓';\n          break;\n        case '↓':\n          this.tasks.sort(cmp).reverse();\n          this.sorted[0] = '↑';\n          break;\n        case '↑':\n          // take copy of tasks from local store\n          this.sorted[0] = '○';\n      }\n    } else if (item === 'Priority') {\n      this.sorted[0] = '○';\n      this.sorted[2] = '○';\n      // need to take care of priority (now its working because of me having great luck :D)\n      function cmp(a, b) {\n        return a.priority < b.priority ? -1 : a.priority > b.priority ? 1 : 0;\n      }\n      switch (this.sorted[1]) {\n        case '○':\n          this.tasks.sort(cmp);\n          this.sorted[1] = '↓';\n          break;\n        case '↓':\n          this.tasks.sort(cmp).reverse();\n          this.sorted[1] = '↑';\n          break;\n        case '↑':\n          // take copy of tasks from local store\n          this.sorted[1] = '○';\n      }\n    } else if (item === 'Time') {\n      this.sorted[0] = '○';\n      this.sorted[1] = '○';\n      // change time to Date and change comp function\n      function cmp(a, b) {\n        return a.time < b.time ? -1 : a.time > b.time ? 1 : 0;\n      }\n      switch (this.sorted[2]) {\n        case '○':\n          this.tasks.sort(cmp);\n          this.sorted[2] = '↓';\n          break;\n        case '↓':\n          this.tasks.sort(cmp).reverse();\n          this.sorted[2] = '↑';\n          break;\n        case '↑':\n          // take copy of tasks from local store\n          this.sorted[2] = '○';\n      }\n    }\n  }\n  createModal() {}\n  createReactive() {}\n  changeModal(item, i) {}\n  changeReactive(item, i) {}\n  deleteItem(i) {\n    if (confirm('You wont to delete?')) {\n      this.tasks.splice(i, 1);\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["A","HomeComponent","constructor","localStore","route","router","needlogin","cwith","modal","reactive","task","priority","time","edit","delete","del","up","down","def","description","ngOnInit","queryParamMap","subscribe","params","login","get","logged","sortTasks","item","sorted","cmp","a","b","tasks","sort","reverse","createModal","createReactive","changeModal","i","changeReactive","deleteItem","confirm","splice"],"sourceRoot":"","sources":["/Users/pavelgamov/Desktop/Sandbox_Angular/src/app/home/home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { MatDialogModule } from '@angular/material/dialog';\n// import { MatButtonModule } from '@angular/material/button';\n// import { MatBasicComponent } from './ng-material/mat-basic/mat-basic.component';\n\nimport { LocalService } from '../local.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nenum A {a,b}\n\nexport class HomeComponent {\n  constructor (private localStore: LocalService, private route : ActivatedRoute, private router : Router) {}\n\n  text = {\n    needlogin: 'You need to be logged in!',\n    cwith: 'Create with',\n    modal: 'modal form',\n    reactive: 'reactive form',\n    task: 'Task',\n    priority: 'Priority',\n    time: 'Time',\n    edit: 'Editing with',\n    delete: 'Deleting',\n    del: 'delete'\n  };\n\n  login : string = '';\n  logged : boolean = true; // then change to false and repair token \n  // enum Arrows {up, down};\n  arrors = {up : '↑', down : '↓', def : '○'};\n  sorted = ['○', '○', '○'];\n\n\n\n  tasks = [\n    {description: 'Погулять с собакой', priority: 'Важно но лень', time: '06:00'},\n    {description: 'Дописать функционал', priority: 'Важно', time: '12:15'},\n    {description: 'Выпить воды', priority: 'Не важно', time: '21:00'},\n    {description: 'Выучить как отцентровать div', priority: 'Важно', time: '00:00'}\n  ];\n\n  options = [\n    'Важно', 'Важно но лень', 'Не важно'\n  ];\n\n  ngOnInit () {\n    // taking params from URL query; mosty from log and sign pages via RouterChange\n    this.route.queryParamMap.subscribe(params => {\n        this.login = params.get('UserLogin') || '';\n        if (this.login != '') {\n          this.logged = true;\n        }\n      }\n    );\n  }\n\n  sortTasks(item : string) : void {\n    if (item === 'Task') {\n      this.sorted[1] = '○'; this.sorted[2] = '○';\n      function cmp (a : {description: string}, b : {description: string}) {return a.description < b.description ? -1 : (a.description > b.description ? 1 : 0)}\n      switch (this.sorted[0]) {\n        case '○':\n          this.tasks.sort(cmp);\n          this.sorted[0] = '↓';\n          break;\n        case '↓':\n          this.tasks.sort(cmp).reverse();\n          this.sorted[0] = '↑';\n          break;\n        case '↑':\n          // take copy of tasks from local store\n          this.sorted[0] = '○';\n      }\n    } else if (item === 'Priority') {\n      this.sorted[0] = '○'; this.sorted[2] = '○';\n      // need to take care of priority (now its working because of me having great luck :D)\n      function cmp (a : {priority: string}, b : {priority: string}) {return a.priority < b.priority ? -1 : (a.priority > b.priority ? 1 : 0)}\n      switch (this.sorted[1]) {\n        case '○':\n          this.tasks.sort(cmp);\n          this.sorted[1] = '↓';\n          break;\n        case '↓':\n          this.tasks.sort(cmp).reverse();\n          this.sorted[1] = '↑';\n          break;\n        case '↑':\n          // take copy of tasks from local store\n          this.sorted[1] = '○';\n      }\n    } else if (item === 'Time') {\n      this.sorted[0] = '○'; this.sorted[1] = '○';\n      // change time to Date and change comp function\n      function cmp (a : {time: string}, b : {time: string}) {return a.time < b.time ? -1 : (a.time > b.time ? 1 : 0)}\n      switch (this.sorted[2]) {\n        case '○':\n          this.tasks.sort(cmp);\n          this.sorted[2] = '↓';\n          break;\n        case '↓':\n          this.tasks.sort(cmp).reverse();\n          this.sorted[2] = '↑';\n          break;\n        case '↑':\n          // take copy of tasks from local store\n          this.sorted[2] = '○';\n      }\n    }\n  }\n\n  createModal() : void {\n\n  }\n\n  createReactive() : void {\n\n  }\n\n  changeModal(item : {}, i : number) : void {\n\n  } \n\n  changeReactive(item : {}, i : number) : void {\n\n  }\n\n  deleteItem(i : number) : void {\n    if (confirm('You wont to delete?')) {\n      this.tasks.splice(i, 1); \n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}