{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SignComponent = class SignComponent {\n  constructor(localStore, route, router, MD5) {\n    this.localStore = localStore;\n    this.route = route;\n    this.router = router;\n    this.MD5 = MD5;\n    this.text = {\n      user: 'Username',\n      name_req: 'Name is required.',\n      pass: 'Password',\n      pass_req: 'Password is required.',\n      sign: 'Sign Up'\n    };\n    this.login = '';\n    this.password = '';\n    this.loginError = false;\n    this.passwordError = false;\n  }\n  createNewUser() {\n    if (!this.localStore.getData(this.login)) {\n      // can create a new user;\n      if (this.login != '' && this.password != '') {\n        // add login and pswd to local storage\n        this.localStore.saveData(this.login, this.password);\n        this.router.navigate(['/home'], {\n          queryParams: {\n            UserLogin: this.login\n          }\n        });\n      } else {\n        // based on state change required state of login and password\n        this.loginError = true ? this.login === '' : false;\n        this.passwordError = true ? this.password === '' : false;\n      }\n    } else {\n      // user already in store so alert\n      alert('Login already used');\n    }\n  }\n};\nSignComponent = __decorate([Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})], SignComponent);\nexport { SignComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAYlC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EACxBC,YAAqBC,UAAwB,EAAUC,KAAsB,EAAUC,MAAe,EAAUC,GAAQ;IAAnG,eAAU,GAAVH,UAAU;IAAwB,UAAK,GAALC,KAAK;IAA2B,WAAM,GAANC,MAAM;IAAmB,QAAG,GAAHC,GAAG;IAEnH,SAAI,GAAG;MACLC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,mBAAmB;MAC7BC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,uBAAuB;MACjCC,IAAI,EAAE;KACP;IAED,UAAK,GAAY,EAAE;IACnB,aAAQ,GAAY,EAAE;IAEtB,eAAU,GAAa,KAAK;IAC5B,kBAAa,GAAa,KAAK;EAd4F;EAgB3HC,aAAa;IACX,IAAI,CAAC,IAAI,CAACT,UAAU,CAACU,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,EAAE;MACxC;MACA,IAAI,IAAI,CAACA,KAAK,IAAI,EAAE,IAAI,IAAI,CAACC,QAAQ,IAAI,EAAE,EAAE;QAC3C;QACA,IAAI,CAACZ,UAAU,CAACa,QAAQ,CAAC,IAAI,CAACF,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;QACnD,IAAI,CAACV,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;UAAEC,WAAW,EAAE;YAAEC,SAAS,EAAE,IAAI,CAACL;UAAK;QAAE,CAAE,CAAC;OAC5E,MAAM;QACL;QACA,IAAI,CAACM,UAAU,GAAG,IAAI,GAAG,IAAI,CAACN,KAAK,KAAK,EAAE,GAAG,KAAK;QAClD,IAAI,CAACO,aAAa,GAAG,IAAI,GAAG,IAAI,CAACN,QAAQ,KAAK,EAAE,GAAG,KAAK;;KAE3D,MAAM;MACL;MACAO,KAAK,CAAC,oBAAoB,CAAC;;EAE/B;CACD;AAlCYrB,aAAa,eANzBD,SAAS,CAAC;EACTuB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GAEWxB,aAAa,CAkCzB;SAlCYA,aAAa","names":["Component","SignComponent","constructor","localStore","route","router","MD5","user","name_req","pass","pass_req","sign","createNewUser","getData","login","password","saveData","navigate","queryParams","UserLogin","loginError","passwordError","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/pavelgamov/Desktop/Sandbox_Angular/src/app/sign/sign.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Md5} from 'ts-md5/dist/md5';\n\nimport { LocalService } from '../local.service';\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\n\nexport class SignComponent {\n  constructor (private localStore: LocalService, private route : ActivatedRoute, private router : Router, private MD5: Md5) {}\n\n  text = {\n    user: 'Username',\n    name_req: 'Name is required.',\n    pass: 'Password',\n    pass_req: 'Password is required.',\n    sign: 'Sign Up'\n  };\n\n  login : string = '';\n  password : string = '';\n\n  loginError : boolean = false;\n  passwordError : boolean = false;\n\n  createNewUser () : void {\n    if (!this.localStore.getData(this.login)) {\n      // can create a new user;\n      if (this.login != '' && this.password != '') {\n        // add login and pswd to local storage\n        this.localStore.saveData(this.login, this.password);\n        this.router.navigate(['/home'], { queryParams: { UserLogin: this.login } });\n      } else {\n        // based on state change required state of login and password\n        this.loginError = true ? this.login === '' : false;\n        this.passwordError = true ? this.password === '' : false;\n      }\n    } else {\n      // user already in store so alert\n      alert('Login already used');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}